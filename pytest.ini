[pytest]
# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum Python version
minversion = 3.8

# Output options
addopts = 
    --verbose
    --strict-markers
    --tb=short
    -p no:warnings

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    api: API endpoint tests
    workflow: Workflow tests
    contract: Contract validation tests
    performance: Performance tests
    security: Security tests
    mock: Tests that run against mock
    production: Tests that run against production
    slow: Tests that take significant time
    critical: Critical functionality tests
    regression: Regression tests
    smoke: Smoke tests for basic functionality

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__init__.py
    */setup.py
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract

[coverage:html]
directory = htmlcov

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# File logging - logs will be created by run_tests.py
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)s] [%(name)s] %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests
timeout = 300